<!--
Copyright 2009 KaChing Group Inc. Licensed under the Apache License,
Version 2.0 (the "License"); you may not use this file except in compliance
with the License. You may obtain a copy of the License at
http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law
or agreed to in writing, software distributed under the License is
distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
KIND, either express or implied. See the License for the specific language
governing permissions and limitations under the License.
-->
<project name="kawala" default="compile" xmlns:ivy="antlib:org.apache.ivy.ant">
  <description>kawala</description>

 <taskdef classname="org.apache.tools.ant.taskdefs.optional.junit.JUnitTask" name="junit">
    <classpath>
      <pathelement location="lib/test/ant-junit-1.7.0.jar" />
      <pathelement location="lib/test/junit-4.3.1.jar" />
    </classpath>
  </taskdef>
  
  <macrodef name="compile">
    <attribute name="srcdir" />
    <attribute name="destdir" />
    <element name="additional-classpath" optional="true" />
    <sequential>
      <javac srcdir="@{srcdir}" destdir="@{destdir}" 
          debug="true" debuglevel="lines,vars,source" target="1.6">
        <additional-classpath />
      </javac>
      <copy todir="@{destdir}">
        <fileset dir="@{srcdir}">
          <exclude name="**/*.java" />
          <exclude name="**/*.scala" />
        </fileset>
      </copy>
    </sequential>
  </macrodef>
  
  <!-- google guava is not configured correctly in the maven repo, so create a special classpath -->
  <path id="classpath-guava">
    <fileset dir="lib/main">
      <include name="**/google-guava-r3.jar" />
    </fileset>
  </path>

  <path id="classpath-test">
    <fileset dir="lib/test">
      <include name="**/*.jar" />
      <exclude name="**/*-src.jar" />
    </fileset>
  </path>

  <target name="clean">
    <delete dir="target" />
    <delete dir="RPMS" />
  </target>

  <target name="init">
    <mkdir dir="target" />
    <mkdir dir="target/bin" />
    <mkdir dir="target/bin-testing" />
    <mkdir dir="target/bin-test" />
    <mkdir dir="target/reports" />
  </target>

  <target name="compile" depends="init">
    <ivy:resolve conf="kawala" type="jar"/>
    <ivy:cachepath pathid="classpath-kawala-common" conf="common"/>
    <ivy:cachepath pathid="classpath-kawala-converters" conf="converters"/>
    <ivy:cachepath pathid="classpath-kawala-guice" conf="guice"/>
    <ivy:cachepath pathid="classpath-kawala-hibernate" conf="hibernate"/>
    <ivy:cachepath pathid="classpath-kawala-testing" conf="testing"/>
    <ivy:cachepath pathid="classpath-kawala" conf="kawala"/>

    <compile srcdir="src" destdir="target/bin">
      <additional-classpath>
        <classpath refid="classpath-kawala-common" />
        <classpath refid="classpath-kawala-converters" />
        <classpath refid="classpath-kawala-guice" />
        <classpath refid="classpath-kawala-hibernate" />
      </additional-classpath>
    </compile>
    <compile srcdir="srctesting/com/kaching/platform/testing"
        destdir="target/bin-testing">
      <additional-classpath>
        <classpath refid="classpath-guava" />
        <classpath refid="classpath-test" />
        <classpath refid="classpath-kawala-testing" />
        <classpath path="target/bin" />
      </additional-classpath>
    </compile>
    <compile srcdir="srctest" destdir="target/bin-test">
      <additional-classpath>
        <classpath refid="classpath-test" />
        <classpath refid="classpath-kawala" />
        <classpath path="target/bin" />
        <classpath path="target/bin-testing" />
      </additional-classpath>
    </compile>
  </target>

  <target name="test" depends="compile">
    <junit printsummary="yes" haltonfailure="yes" fork="true"
        maxmemory="1024M" showoutput="no">
      <sysproperty
          key="kawala.bin_directories" file="target/bin:target/bin-testing" />
      <jvmarg value="-XX:MaxPermSize=256m"/>
      <jvmarg value="-Xms128m"/>
      <jvmarg value="-Xmx1700m"/>
      <classpath refid="classpath-kawala" />
      <classpath refid="classpath-guava" />
      <classpath refid="classpath-test" />
      <classpath path="target/bin" />
      <classpath path="target/bin-testing" />
      <classpath path="target/bin-test" />
      <formatter type="xml" usefile="true" />
      <test name="com.kaching.platform.AllTests"
          todir="target/reports" unless="testcase" />
    </junit>
  </target>
  
  <target name="smoke" description="Smoke Build" depends="clean,test" />
  
  <property name="ivy.install.version" value="2.1.0" />
  <condition property="ivy.home" value="${env.IVY_HOME}">
    <isset property="env.IVY_HOME" />
  </condition>
  <property name="ivy.home" value="${user.home}/.ant" />
  <property name="ivy.jar.dir" value="${ivy.home}/lib" />
  <property name="ivy.jar.file" value="${ivy.jar.dir}/ivy.jar" />

  <target name="ivy-download" unless="offline">
    <mkdir dir="${ivy.jar.dir}"/>
    <!-- download Ivy from web site so that it can be used even without any special installation -->
    <get src="http://repo2.maven.org/maven2/org/apache/ivy/ivy/${ivy.install.version}/ivy-${ivy.install.version}.jar" 
         dest="${ivy.jar.file}" usetimestamp="true"/>
  </target>

  <target name="ivy-init" depends="ivy-download">
      <!-- try to load ivy here from ivy home, in case the user has not already dropped
           it into ant's lib dir (note that the latter copy will always take precedence).
           We will not fail as long as local lib dir exists (it may be empty) and
           ivy is in at least one of ant's lib dir or the local lib dir. -->
    <path id="ivy.lib.path">
      <fileset dir="${ivy.jar.dir}" includes="*.jar"/>
    </path>
    <taskdef resource="org/apache/ivy/ant/antlib.xml"
             uri="antlib:org.apache.ivy.ant" classpathref="ivy.lib.path"/>
  </target>
 
  <target name="ivy-clean" description="clean ivy dependencies">
    <ivy:cleancache />
  </target>
  
</project>
